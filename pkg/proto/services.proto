syntax = "proto3";
package proto;
option go_package = "github.com/bdreece/hopper/pkg/proto";

import "device.proto";
import "event.proto";
import "firmware.proto";
import "model.proto";
import "property.proto";
import "tenant.proto";
import "type.proto";
import "unit.proto";

service DeviceService {
  rpc AuthDevice(AuthDeviceRequest) returns (AuthDeviceResponse);
  rpc GetDevice(GetDeviceRequest) returns (Device);
  rpc UpdateDevice(UpdateDeviceRequest) returns (Device);
  rpc DeleteDevice(DeleteDeviceRequest) returns (Device);
}

service EventService {
  rpc CreateEvents(CreateEventsRequest) returns (Events);
  rpc GetEvent(GetEventRequest) returns (Event);
  rpc GetEvents(GetEventsRequest) returns (Events);
}

service FirmwareService {
  rpc GetFirmware(GetFirmwareRequest) returns (Firmware);
}

service ModelService {
  rpc GetModel(GetModelRequest) returns (Model);
  rpc GetModels(GetModelsRequest) returns (Models);
}

service PropertyService {
  rpc CreateProperty(CreatePropertyRequest) returns (Property);
  rpc GetProperty(GetPropertyRequest) returns (Property);
  rpc GetProperties(GetPropertiesRequest) returns (Properties);
  rpc UpdateProperty(UpdatePropertyRequest) returns (Property);
  rpc DeleteProperty(DeletePropertyRequest) returns (Property);
}

service TenantService { rpc GetTenant(GetTenantRequest) returns (Tenant); }

service TypeService {
  rpc GetType(GetTypeRequest) returns (Type);
  rpc GetTypes(GetTypesRequest) returns (Types);
}

service UnitService {
  rpc GetUnit(GetUnitRequest) returns (Unit);
  rpc GetUnits(GetUnitRequest) returns (Units);
}