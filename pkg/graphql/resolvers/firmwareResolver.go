package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"

	"github.com/bdreece/hopper/pkg/models"
)

// Model is the resolver for the model field.
func (r *firmwareResolver) Model(ctx context.Context, obj *models.Firmware) (*models.DeviceModel, error) {
	const (
		resolver = "FirmwareResolver"
		field    = "Model"
	)

	logger := r.logger.
		WithContext(resolver).
		WithContext(field)

	logger.Infoln("Querying for firmware device model")
	deviceModel := models.DeviceModel{}
	err := r.db.
		InnerJoins("firmware", obj).
		First(&deviceModel).
		Error

	if err != nil {
		return nil, handleQueryError(err, logger, field)
	}

	logger.Infoln("Device model received!")
	return &deviceModel, nil
}

// Firmware returns FirmwareResolver implementation.
func (r *Resolver) Firmware() FirmwareResolver { return &firmwareResolver{r} }

type firmwareResolver struct{ *Resolver }
