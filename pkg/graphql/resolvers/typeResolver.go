package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"

	"github.com/bdreece/hopper/pkg/models"
)

// Unit is the resolver for the unit field.
func (r *typeResolver) Unit(ctx context.Context, obj *models.Type) (*models.Unit, error) {
	const (
		resolver = "PropertyResolver"
		field    = "Device"
	)

	logger := r.logger.
		WithContext(resolver).
		WithContext(field)

	logger.Infoln("Querying for type unit...")
	unit := models.Unit{}
	err := r.db.
		InnerJoins("type", obj).
		First(&unit).
		Error

	if err != nil {
		return nil, handleQueryError(err, logger, field)
	}

	logger.Infoln("Unit received!")
	return &unit, nil
}

// Type returns TypeResolver implementation.
func (r *Resolver) Type() TypeResolver { return &typeResolver{r} }

type typeResolver struct{ *Resolver }
